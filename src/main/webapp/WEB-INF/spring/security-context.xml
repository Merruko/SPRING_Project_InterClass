<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

		<context:component-scan base-package="com.spring.login.user"/>


        <http auto-config="true" use-expressions="true">
        
<!-- view 관리 --> 
<!-- 권한 승인 순서 중요! 최상위 권한자(admin)로부터 게스트에게로(permitAll) -->
        	
        	<!-- 관리자가 로그인 했을 때 접근가능한 화면 패턴 -->
      	    <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
      	    
      	    <!-- 회원등록된 사용자가 로그인 했을 때 접근가능한 화면 패턴 -->
            <intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
      	    
            <!-- 회원등록하지 '않은' 사용자가 접근가능한 화면 패턴 -->
            <intercept-url pattern="/**" access="permitAll" />  

			<!-- 로그인 하지 않은 사용자만 로그인페이지와 회원가입페이지에 접근 -->
            <intercept-url pattern="/login" access="isAnonymous()"/>
            <intercept-url pattern="/signUp" access="isAnonymous()"/>


			<!-- spring security에서 제공해주는 로그인,로그아웃 기능은 post방식이 디폴트!
				 get방식!으로 진행하기 위해 잠시 csrf를 disabled 해놓는다... -->
			<csrf disabled="true"/>
			
			
<!-- 
login-page : 로그인 화면 url
default-target-url : 로그인 성공시 호출할 url패턴
(택1)authentication-failure-url : 로그인 실패시 호출할 url
(택2)authentication-failure-handler-ref : 로그인 실패시 핸들링할 클래스
 -->
        	<form-login
        		username-parameter="logId"
        		password-parameter="logPwd"
        		login-processing-url="/login"
        		login-page="/secu/loginForm"
        		authentication-success-handler-ref="userLoginSuccessHandler"
        		authentication-failure-handler-ref="userLoginFailHandler"
        	/>
        	

<!-- 
logout-url : 로그아웃 url - menu.jsp 로그아웃 버튼에 넣어놓음
(택1)logout-success-url : 로그아웃 완료후 리다이렉트되는 페이지 주소
(택2)success-handler-ref : 로그아웃 url 주소가 발생하면 시큐리티 컨텍스트에서 인터셉트하여 로그아웃 처리를 다룰 클래스 id
						   따로 아래에 bean 삽입해야함
invalidate-session : /logout url이 왔을 때 세션을 종료할 건지 아닌지
					 기본 디폴트는 true 이나, false로 하여 핸들러 클래스에서 처리하기로 함
 -->
        	<logout
        		logout-url="/logout"
        		success-handler-ref="logoutSuccessHandler"
        		invalidate-session="false"
 			/>
 			
 			
<!-- 중복 로그인 방지 -->
<!-- 
invalid-session-url : 세션이 타임아웃 되었을 때 로그인 페이지로 연결
					  그리고 서버 run 했을 때 처음으로 띄워지는 화면이 되기도 함 url 주소 변경에 주의
concurrency-control : 동시 접속 가능한 세션 제한
					  max-session 최대 세션 수, expired-url 세션이 만료되면 이동할 페이지
 -->
        	<session-management invalid-session-url="/">
				 <concurrency-control max-sessions="1" expired-url="/"/>
			</session-management>     
			   	
			   	
			   	
<!-- 403에러 페이지를 대체할 지정화면 이동 설정 : controller 의 맵핑 value 랑 일치 시킬 것! -->
        	<access-denied-handler
    		error-page="/access_denied"
			/>
        	
        </http>
        
        
<!-- DB연동 설정 -->
        <authentication-manager>
            <authentication-provider user-service-ref="userLoginService" />
        </authentication-manager>
        
        <jdbc-user-service data-source-ref="dataSource" id="userLoginService"
		    users-by-username-query="SELECT mId as logId, mPwd as logPwd, ENABLED FROM member WHERE mId=?"
		    authorities-by-username-query="SELECT mId as logID, AUTHORITY FROM member WHERE mId=?"
		/>
		
		
<!-- bean 주입 -->		        
		<beans:bean id="userLoginService" class="com.spring.login.user.CustomUserDetailsService"/>

		<beans:bean id="userLoginSuccessHandler" class="com.spring.login.user.CustomUserLoginSuccessHandler">
			<beans:property name="logId" value="logId" />
			<!-- 로그인 성공시 home으로 가도록 설정 됨 value="/"(controller의 mapping 패턴) -->			
			<beans:property name="defaultSuccessURL" value="/" />
		</beans:bean>
		
		<beans:bean id="userLoginFailHandler" class="com.spring.login.user.CustomUserLoginFailHandler">
			<beans:property name="logId" value="logId" />
			<beans:property name="logPwd" value="logPwd" />
			<!-- 로그인 실패시 LoginController에서 /loginFail 맵핑, /secu/loginFail.jsp로 이동 -->			
			<beans:property name="defaultFailureURL" value="/loginFail" />
		</beans:bean>
		
		<beans:bean id="logoutSuccessHandler" class="com.spring.login.user.CustomLogoutSuccessHandler" />


</beans:beans>
