<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원가입 -->
	<insert id="insert" parameterType="com.spring.member.domain.MemberVO">
	
		<!-- SEQ 작업 -->
		<selectKey keyProperty="mNum" resultType="int" order="BEFORE">
			SELECT I_ZBF_GET_MEM('now') FROM DUAL
		</selectKey>
	
	INSERT INTO I_member
	(MNUM, MID, MPWD, MNAME, MGENDER, MBIRTH, MEMAIL, MPHONE)
	VALUES
	(#{mNum},#{mId},#{mPwd},#{mName},#{mGender},#{mBirth},#{mEmail},#{mPhone})
	</insert>
	
	
	<!-- 회원삭제 -->
	<insert id="delete" parameterType="com.spring.member.domain.MemberVO">
	DELETE FROM I_MEMBER WHERE MID = #{mId}
	</insert>
	
	
	<!-- 회원목록전체 -->
	<select id="selectall" resultType="com.spring.member.domain.MemberVO">
	SELECT * FROM I_MEMBER ORDER BY MNUM ASC
	</select>
	
	
	<!-- 회원상세정보 -->
	<select id="selectOne" resultType="com.spring.member.domain.MemberVO">
	SELECT * FROM I_MEMBER WHERE MID = #{mId}
	</select>
	
	
	<!-- 회원정보수정 -->
	<update id="update" parameterType="com.spring.member.domain.MemberVO">
	UPDATE I_MEMBER
	SET MNAME = #{mName},
		MGENDER = #{mGender},
		MBIRTH = #{mBirth},
		MEMAIL = #{mEmail},
		MPHONE = #{mPhone}
	WHERE MID = #{mId}
	</update>
	
	<!-- 회원정보수정 -->
	<update id="updateByAdmin" parameterType="com.spring.member.domain.MemberVO">
	UPDATE I_MEMBER
	SET MNAME = #{mName},
		MPWD = #{mPwd},
		MGENDER = #{mGender},
		MBIRTH = #{mBirth},
		MEMAIL = #{mEmail},
		MPHONE = #{mPhone}
	WHERE MID = #{mId}
	</update>
	
	<!-- 비밀번호변경 -->
	<update id="updatePass" parameterType="com.spring.member.domain.MemberVO">
	UPDATE I_MEMBER
	SET MPWD = #{mPwd}
	WHERE MID = #{mId}
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="java.util.HashMap" resultType="String">
		SELECT MID FROM I_MEMBER WHERE MNAME = #{u_name} AND MEMAIL = #{u_mail}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPwd" parameterType="java.util.HashMap" resultType="String">
		SELECT MPWD FROM I_MEMBER
		
		<choose>	
		<when test="u_phone == null and u_id != null and u_birth != null">
				WHERE MID LIKE #{u_id} AND MBIRTH LIKE #{u_birth} 
      	</when>
		<when test="u_id == null and u_phone != null and u_birth != null  ">
				WHERE MPHONE LIKE #{u_phone} AND MBIRTH LIKE #{u_birth} 
      	</when>
	</choose>
	</select>
	
</mapper>